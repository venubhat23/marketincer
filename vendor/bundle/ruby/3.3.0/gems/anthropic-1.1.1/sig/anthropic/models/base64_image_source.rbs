module Anthropic
  module Models
    type base64_image_source =
      {
        data: String,
        media_type: Anthropic::Models::Base64ImageSource::media_type,
        type: :base64
      }

    class Base64ImageSource < Anthropic::Internal::Type::BaseModel
      attr_accessor data: String

      attr_accessor media_type: Anthropic::Models::Base64ImageSource::media_type

      attr_accessor type: :base64

      def initialize: (
        data: String,
        media_type: Anthropic::Models::Base64ImageSource::media_type,
        ?type: :base64
      ) -> void

      def to_hash: -> {
        data: String,
        media_type: Anthropic::Models::Base64ImageSource::media_type,
        type: :base64
      }

      type media_type =
        :"image/jpeg" | :"image/png" | :"image/gif" | :"image/webp"

      module MediaType
        extend Anthropic::Internal::Type::Enum

        IMAGE_JPEG: :"image/jpeg"
        IMAGE_PNG: :"image/png"
        IMAGE_GIF: :"image/gif"
        IMAGE_WEBP: :"image/webp"

        def self?.values: -> ::Array[Anthropic::Models::Base64ImageSource::media_type]
      end
    end
  end
end
