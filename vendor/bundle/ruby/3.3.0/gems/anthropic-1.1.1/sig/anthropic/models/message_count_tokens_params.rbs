module Anthropic
  module Models
    type message_count_tokens_params =
      {
        messages: ::Array[Anthropic::MessageParam],
        model: Anthropic::Models::model,
        system_: Anthropic::Models::MessageCountTokensParams::system_,
        thinking: Anthropic::Models::thinking_config_param,
        tool_choice: Anthropic::Models::tool_choice,
        tools: ::Array[Anthropic::Models::message_count_tokens_tool]
      }
      & Anthropic::Internal::Type::request_parameters

    class MessageCountTokensParams < Anthropic::Internal::Type::BaseModel
      extend Anthropic::Internal::Type::RequestParameters::Converter
      include Anthropic::Internal::Type::RequestParameters

      attr_accessor messages: ::Array[Anthropic::MessageParam]

      attr_accessor model: Anthropic::Models::model

      attr_reader system_: Anthropic::Models::MessageCountTokensParams::system_?

      def system_=: (
        Anthropic::Models::MessageCountTokensParams::system_
      ) -> Anthropic::Models::MessageCountTokensParams::system_

      attr_reader thinking: Anthropic::Models::thinking_config_param?

      def thinking=: (
        Anthropic::Models::thinking_config_param
      ) -> Anthropic::Models::thinking_config_param

      attr_reader tool_choice: Anthropic::Models::tool_choice?

      def tool_choice=: (
        Anthropic::Models::tool_choice
      ) -> Anthropic::Models::tool_choice

      attr_reader tools: ::Array[Anthropic::Models::message_count_tokens_tool]?

      def tools=: (
        ::Array[Anthropic::Models::message_count_tokens_tool]
      ) -> ::Array[Anthropic::Models::message_count_tokens_tool]

      def initialize: (
        messages: ::Array[Anthropic::MessageParam],
        model: Anthropic::Models::model,
        ?system_: Anthropic::Models::MessageCountTokensParams::system_,
        ?thinking: Anthropic::Models::thinking_config_param,
        ?tool_choice: Anthropic::Models::tool_choice,
        ?tools: ::Array[Anthropic::Models::message_count_tokens_tool],
        ?request_options: Anthropic::request_opts
      ) -> void

      def to_hash: -> {
        messages: ::Array[Anthropic::MessageParam],
        model: Anthropic::Models::model,
        system_: Anthropic::Models::MessageCountTokensParams::system_,
        thinking: Anthropic::Models::thinking_config_param,
        tool_choice: Anthropic::Models::tool_choice,
        tools: ::Array[Anthropic::Models::message_count_tokens_tool],
        request_options: Anthropic::RequestOptions
      }

      type system_ = String | ::Array[Anthropic::TextBlockParam]

      module System
        extend Anthropic::Internal::Type::Union

        def self?.variants: -> ::Array[Anthropic::Models::MessageCountTokensParams::system_]

        TextBlockParamArray: Anthropic::Internal::Type::Converter
      end
    end
  end
end
