module Anthropic
  module Models
    class BetaServerToolUseBlock = Beta::BetaServerToolUseBlock

    module Beta
      type beta_server_tool_use_block =
        {
          id: String,
          input: top,
          name: Anthropic::Models::Beta::BetaServerToolUseBlock::name_,
          type: :server_tool_use
        }

      class BetaServerToolUseBlock < Anthropic::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor input: top

        attr_accessor name: Anthropic::Models::Beta::BetaServerToolUseBlock::name_

        attr_accessor type: :server_tool_use

        def initialize: (
          id: String,
          input: top,
          name: Anthropic::Models::Beta::BetaServerToolUseBlock::name_,
          ?type: :server_tool_use
        ) -> void

        def to_hash: -> {
          id: String,
          input: top,
          name: Anthropic::Models::Beta::BetaServerToolUseBlock::name_,
          type: :server_tool_use
        }

        type name_ = :web_search | :code_execution

        module Name
          extend Anthropic::Internal::Type::Enum

          WEB_SEARCH: :web_search
          CODE_EXECUTION: :code_execution

          def self?.values: -> ::Array[Anthropic::Models::Beta::BetaServerToolUseBlock::name_]
        end
      end
    end
  end
end
