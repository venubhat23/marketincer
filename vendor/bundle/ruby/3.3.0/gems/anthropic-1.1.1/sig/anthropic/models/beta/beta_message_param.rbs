module Anthropic
  module Models
    class BetaMessageParam = Beta::BetaMessageParam

    module Beta
      type beta_message_param =
        {
          content: Anthropic::Models::Beta::BetaMessageParam::content,
          role: Anthropic::Models::Beta::BetaMessageParam::role
        }

      class BetaMessageParam < Anthropic::Internal::Type::BaseModel
        attr_accessor content: Anthropic::Models::Beta::BetaMessageParam::content

        attr_accessor role: Anthropic::Models::Beta::BetaMessageParam::role

        def initialize: (
          content: Anthropic::Models::Beta::BetaMessageParam::content,
          role: Anthropic::Models::Beta::BetaMessageParam::role
        ) -> void

        def to_hash: -> {
          content: Anthropic::Models::Beta::BetaMessageParam::content,
          role: Anthropic::Models::Beta::BetaMessageParam::role
        }

        type content =
          String | ::Array[Anthropic::Models::Beta::beta_content_block_param]

        module Content
          extend Anthropic::Internal::Type::Union

          def self?.variants: -> ::Array[Anthropic::Models::Beta::BetaMessageParam::content]

          BetaContentBlockParamArray: Anthropic::Internal::Type::Converter
        end

        type role = :user | :assistant

        module Role
          extend Anthropic::Internal::Type::Enum

          USER: :user
          ASSISTANT: :assistant

          def self?.values: -> ::Array[Anthropic::Models::Beta::BetaMessageParam::role]
        end
      end
    end
  end
end
