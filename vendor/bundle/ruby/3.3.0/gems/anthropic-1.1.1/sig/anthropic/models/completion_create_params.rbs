module Anthropic
  module Models
    type completion_create_params =
      {
        max_tokens_to_sample: Integer,
        model: Anthropic::Models::model,
        prompt: String,
        metadata: Anthropic::Metadata,
        stop_sequences: ::Array[String],
        temperature: Float,
        top_k: Integer,
        top_p: Float,
        betas: ::Array[Anthropic::Models::anthropic_beta]
      }
      & Anthropic::Internal::Type::request_parameters

    class CompletionCreateParams < Anthropic::Internal::Type::BaseModel
      extend Anthropic::Internal::Type::RequestParameters::Converter
      include Anthropic::Internal::Type::RequestParameters

      attr_accessor max_tokens_to_sample: Integer

      attr_accessor model: Anthropic::Models::model

      attr_accessor prompt: String

      attr_reader metadata: Anthropic::Metadata?

      def metadata=: (Anthropic::Metadata) -> Anthropic::Metadata

      attr_reader stop_sequences: ::Array[String]?

      def stop_sequences=: (::Array[String]) -> ::Array[String]

      attr_reader temperature: Float?

      def temperature=: (Float) -> Float

      attr_reader top_k: Integer?

      def top_k=: (Integer) -> Integer

      attr_reader top_p: Float?

      def top_p=: (Float) -> Float

      attr_reader betas: ::Array[Anthropic::Models::anthropic_beta]?

      def betas=: (
        ::Array[Anthropic::Models::anthropic_beta]
      ) -> ::Array[Anthropic::Models::anthropic_beta]

      def initialize: (
        max_tokens_to_sample: Integer,
        model: Anthropic::Models::model,
        prompt: String,
        ?metadata: Anthropic::Metadata,
        ?stop_sequences: ::Array[String],
        ?temperature: Float,
        ?top_k: Integer,
        ?top_p: Float,
        ?betas: ::Array[Anthropic::Models::anthropic_beta],
        ?request_options: Anthropic::request_opts
      ) -> void

      def to_hash: -> {
        max_tokens_to_sample: Integer,
        model: Anthropic::Models::model,
        prompt: String,
        metadata: Anthropic::Metadata,
        stop_sequences: ::Array[String],
        temperature: Float,
        top_k: Integer,
        top_p: Float,
        betas: ::Array[Anthropic::Models::anthropic_beta],
        request_options: Anthropic::RequestOptions
      }
    end
  end
end
