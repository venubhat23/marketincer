module Anthropic
  module Models
    module Beta
      module Messages
        type beta_message_batch =
          {
            id: String,
            archived_at: Time?,
            cancel_initiated_at: Time?,
            created_at: Time,
            ended_at: Time?,
            expires_at: Time,
            processing_status: Anthropic::Models::Beta::Messages::BetaMessageBatch::processing_status,
            request_counts: Anthropic::Beta::Messages::BetaMessageBatchRequestCounts,
            results_url: String?,
            type: :message_batch
          }

        class BetaMessageBatch < Anthropic::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor archived_at: Time?

          attr_accessor cancel_initiated_at: Time?

          attr_accessor created_at: Time

          attr_accessor ended_at: Time?

          attr_accessor expires_at: Time

          attr_accessor processing_status: Anthropic::Models::Beta::Messages::BetaMessageBatch::processing_status

          attr_accessor request_counts: Anthropic::Beta::Messages::BetaMessageBatchRequestCounts

          attr_accessor results_url: String?

          attr_accessor type: :message_batch

          def initialize: (
            id: String,
            archived_at: Time?,
            cancel_initiated_at: Time?,
            created_at: Time,
            ended_at: Time?,
            expires_at: Time,
            processing_status: Anthropic::Models::Beta::Messages::BetaMessageBatch::processing_status,
            request_counts: Anthropic::Beta::Messages::BetaMessageBatchRequestCounts,
            results_url: String?,
            ?type: :message_batch
          ) -> void

          def to_hash: -> {
            id: String,
            archived_at: Time?,
            cancel_initiated_at: Time?,
            created_at: Time,
            ended_at: Time?,
            expires_at: Time,
            processing_status: Anthropic::Models::Beta::Messages::BetaMessageBatch::processing_status,
            request_counts: Anthropic::Beta::Messages::BetaMessageBatchRequestCounts,
            results_url: String?,
            type: :message_batch
          }

          type processing_status = :in_progress | :canceling | :ended

          module ProcessingStatus
            extend Anthropic::Internal::Type::Enum

            IN_PROGRESS: :in_progress
            CANCELING: :canceling
            ENDED: :ended

            def self?.values: -> ::Array[Anthropic::Models::Beta::Messages::BetaMessageBatch::processing_status]
          end
        end
      end
    end
  end
end
