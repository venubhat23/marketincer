module Anthropic
  module Models
    type document_block_param =
      {
        source: Anthropic::Models::DocumentBlockParam::source,
        type: :document,
        cache_control: Anthropic::CacheControlEphemeral?,
        citations: Anthropic::CitationsConfigParam,
        context: String?,
        title: String?
      }

    class DocumentBlockParam < Anthropic::Internal::Type::BaseModel
      attr_accessor source: Anthropic::Models::DocumentBlockParam::source

      attr_accessor type: :document

      attr_accessor cache_control: Anthropic::CacheControlEphemeral?

      attr_reader citations: Anthropic::CitationsConfigParam?

      def citations=: (
        Anthropic::CitationsConfigParam
      ) -> Anthropic::CitationsConfigParam

      attr_accessor context: String?

      attr_accessor title: String?

      def initialize: (
        source: Anthropic::Models::DocumentBlockParam::source,
        ?cache_control: Anthropic::CacheControlEphemeral?,
        ?citations: Anthropic::CitationsConfigParam,
        ?context: String?,
        ?title: String?,
        ?type: :document
      ) -> void

      def to_hash: -> {
        source: Anthropic::Models::DocumentBlockParam::source,
        type: :document,
        cache_control: Anthropic::CacheControlEphemeral?,
        citations: Anthropic::CitationsConfigParam,
        context: String?,
        title: String?
      }

      type source =
        Anthropic::Base64PDFSource
        | Anthropic::PlainTextSource
        | Anthropic::ContentBlockSource
        | Anthropic::URLPDFSource

      module Source
        extend Anthropic::Internal::Type::Union

        def self?.variants: -> ::Array[Anthropic::Models::DocumentBlockParam::source]
      end
    end
  end
end
